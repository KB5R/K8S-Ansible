---
- name: Install_K8S
  hosts: all
  become: yes
  tasks:
    - name: hostname setings
      command: hostnamectl set-hostname {{ item.new_hostname }}
      when: inventory_hostname == item.inventory_hostname
      loop:
        - { inventory_hostname: 'master1', new_hostname: 'master1' }
        - { inventory_hostname: 'master2', new_hostname: 'master2' }
        - { inventory_hostname: 'work1', new_hostname: 'work1' }
        - { inventory_hostname: 'work2', new_hostname: 'work2' }

    - name: Setings /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        create: yes
      with_items:
        - 10.236.0.170 master1
        - 10.236.0.172 master2
        - 10.236.0.173 work1
        - 10.236.0.174 work2

    - name: Добавление параметров в /etc/sysctl.conf
      lineinfile:
        path: /etc/sysctl.conf
        line: "{{ item }}"
        create: yes
      with_items:
        - vm.swappiness = 10
        - net.core.somaxconn = 16384
        - net.core.netdev_max_backlog = 2000
        - net.core.netdev_budget = 1000
        - net.core.default_qdisc = fq
        - net.ipv6.conf.all.disable_ipv6 = 1
        - net.ipv6.conf.default.disable_ipv6 = 1
        - net.ipv4.tcp_mtu_probing = 0
        - net.ipv4.tcp_window_scaling = 1
        - net.ipv4.tcp_congestion_control = bbr
        - net.ipv4.tcp_notsent_lowat = 16384
        - net.ipv4.tcp_timestamps = 1
        - net.ipv4.tcp_sack = 1
        - net.ipv4.tcp_tw_reuse = 1
        - net.ipv4.tcp_adv_win_scale = -2
        - net.ipv4.tcp_syncookies = 0
        - net.ipv4.tcp_max_syn_backlog = 4096
        - net.ipv4.tcp_synack_retries = 1
        - net.ipv4.tcp_max_orphans = 65536
        - net.ipv4.tcp_fin_timeout = 10
        - net.ipv4.tcp_keepalive_time = 60
        - net.ipv4.tcp_keepalive_intvl = 15
        - net.ipv4.tcp_keepalive_probes = 5
        - net.ipv4.tcp_slow_start_after_idle = 0
        - net.ipv4.conf.all.accept_source_route = 0
        - net.ipv4.conf.all.accept_redirects = 0
        - net.ipv4.conf.all.secure_redirects = 0
        - net.ipv4.conf.all.send_redirects = 0
        - net.ipv4.icmp_echo_ignore_broadcasts = 1
        - net.ipv4.icmp_ignore_bogus_error_responses = 1
        - net.core.rmem_max = 56623104
        - net.core.wmem_max = 56623104
        - net.core.rmem_default = 56623104
        - net.core.wmem_default = 56623104
        - net.core.optmem_max = 40960
        - net.ipv4.tcp_rmem = 4096 87380 56623104
        - net.ipv4.tcp_wmem = 4096 65536 56623104
        - net.ipv6.conf.lo.disable_ipv6 = 1

    - name: Apply sysctl
      command: sysctl -p

    - name: Off /etc/apt/apt.conf.d/20auto-upgrades
      copy:
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        content: |
          APT::Periodic::Update-Package-Lists "0";
          APT::Periodic::Unattended-Upgrade "0";
        owner: root
        group: root
        mode: '0644'

    - name: Installing auxiliary packages
      shell: apt install -y curl wget gnupg sudo iptables tmux keepalived haproxy ca-certificates apt-transport-https gnupg-agent software-properties-common
      ignore_errors: yes


    - name: On module kernel overlay и br_netfilter
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        owner: root
        group: root
        mode: '0644'

    - name: load module overlay
      modprobe:
        name: overlay
        state: present

    - name: load module br_netfilter
      modprobe:
        name: br_netfilter
        state: present

    - name: IP routing
      copy:
        dest: /etc/sysctl.d/10-k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        owner: root
        group: root
        mode: '0644'

    - name: Apply sysctl
      command: sysctl -f /etc/sysctl.d/10-k8s.conf

    - name: Off Swap
      command: swapoff -a

    - name: Commit string swap in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*\s+swap\s+)'
        replace: '#\1'

    - name: Add one key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add repo
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Settings chmod 644
      shell: chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      ignore_errors: yes

    - name: Settings chmod 644
      shell: chmod 644 /etc/apt/sources.list.d/kubernetes.list
      ignore_errors: yes

    - name: Refresh apt
      apt:
        update_cache: yes

    - name: Install kubeadm, kubelet and kubectl
      apt:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: present

    - name: Copy install_docker.sh in distanetions host
      copy:
        src: "{{ playbook_dir }}/script/install_docker.sh"
        dest: /root/install_docker.sh
        mode: '0751'


    - name: Run install_docker.sh
      shell: bash install_docker.sh
